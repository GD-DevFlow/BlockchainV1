package blockchain;

import java.io.UnsupportedEncodingException;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;


// https://www.baeldung.com/java-blockchain

public class Block {
	
	private String hash;
	private String previousHash;
	private String data;
	private long timeStamp;
	private int nonce;
	private static Logger logger = Logger.getLogger(Block.class.getName());
	
	public Block(String data,String previousHash,long timeStamp)
	{
		this.data = data;
		this.previousHash = previousHash;
		this.timeStamp = timeStamp;
	}
	
	public void setData(String data)
	{
		this.data = data;
	}
	
	public String getHash()
	{
		return this.hash;
	}
	
	public String getPreviousHash()
	{
		return this.previousHash;
	}
	
	public String calculateHash()
	{
		String datatoHash = this.previousHash + Long.toString(timeStamp) + Integer.toString(nonce) + data;
		MessageDigest digest = null;
		byte[] bytes = null;
		try {
			digest = MessageDigest.getInstance("SHA-256");
			bytes = digest.digest(datatoHash.getBytes(StandardCharsets.UTF_8.name()));
		} catch(NoSuchAlgorithmException | UnsupportedEncodingException ex)
		{
			logger.log(Level.SEVERE, ex.getMessage());
		}
		
		StringBuffer buffer =  new StringBuffer();
		for (byte b : bytes)
		{
			buffer.append(String.format("%02x", b));
		}
		return buffer.toString();
}
	
	public String mineBlock(int prefix)
	{
		String prefixString = new String(new char[prefix]).replace('\0', '0');
		while(!hash.substring(0, prefix).contentEquals(prefixString))
		{
			nonce++;
			hash = calculateHash();
		}
		return hash;
	}

	
	
}
